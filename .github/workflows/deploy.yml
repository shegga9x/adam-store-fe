name: üöÄ Deploy Microservice to VPS

on:
  push:
    branches:
      - update-vps # or your specific deploy branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: secrets
    steps:
      - name: üì¶ SSH Deploy to VPS
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: root
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -euo pipefail

            PROJECT_DIR="/root/f4-microserices-vps-configuration/Spring_AdamStore"
            DB_NAME="adam-store"
            CONTAINER_DB="postgres-adam-store"
            CONTAINER_APP="spring-adam-store"
            HEALTH_URL="https://${{ secrets.VPS_HOST }}/adamstore/actuator/health"
            SQL_FILE="adam_store_data.sql"

            echo "üìÅ Navigating to project directory..."
            cd $PROJECT_DIR

            echo "üì• Pulling latest changes from Git..."
            git pull

            echo "üõ¢Ô∏è Starting Postgres container if not running..."
            docker compose up -d $CONTAINER_DB

            echo "üßπ Dropping and recreating schema in Postgres..."
            docker exec $CONTAINER_DB bash -c "psql -U postgres -d $DB_NAME -c 'DROP SCHEMA public CASCADE; CREATE SCHEMA public;'"

            echo "üßº Removing existing app container if any..."
            docker compose down $CONTAINER_APP

            echo "üê≥ Building and starting all services..."
            docker compose up -d --build

            echo "üîé Waiting for $CONTAINER_APP to become healthy..."
            until curl -sf $HEALTH_URL | jq -r .status | grep -q UP; do
              echo "‚è≥ Waiting for $CONTAINER_APP to be healthy..."
              sleep 3
            done
            sleep 6
            echo "üìÇ Copying SQL file to Postgres container..."
            docker cp $SQL_FILE $CONTAINER_DB:/$SQL_FILE

            echo "üì• Importing SQL data into database..."
            docker exec $CONTAINER_DB bash -c "psql -U postgres -d $DB_NAME -f /$SQL_FILE"

            echo "‚úÖ Deployment finished successfully."
